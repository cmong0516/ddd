package com.example.ddd.order.domain;

public class Aggregate {
    // 애그리거트
    // 백개 이상의 테이블을 한 ERD 에 표시하게 되면 개별 테이블간의 관계를 파악하느라 큰 틀에서 데이터 구조를 이해하는데 어려움이 생긴다.
    // 도메인 객체 모델이 복잡해지면 개별 구성요소 위주로 모델을 이해하게 되고 전반적인 구조나 큰 수준에서 도메인 간의 관계를 파악하기 어려워진다.
    // 이를 쉽게 이해하기 위해서 상위 수준에서 모델을 조망할수 있는 방법이 필요한데 그것이 애그리거트 이다.
    // 애그리거트는 모델을 이해하는데 도움을 주면서 일관성을 관리하는 기준이기도 하다.
    // 한 애그리거트에 속한 객체는 다른 애그리거트에 속하지 않는다.
    // 이때 구분 기분이 되는것은 도메인 규칙과 요구사항 이다.
    // A가 B를 갖는다 라고 하더라도 하나의 애그리거트인것은 아니다. EX) 상품 , 리뷰
    // 대부분 하나의 애그리거트는 한개의 엔티티를 갖게 된다.
    // 애그리거트에 속한 모든 객체는 일관된 상태를 유지해야 하는데 이것을 관리하는것이 루트 엔티티 이며 애그리거트에 속한 객체는 루트 엔티티에 속하게 된다.
}
